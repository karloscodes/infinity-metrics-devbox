services:
  infinity-web:
    image: karloscodes/infinity-metrics-beta:latest
    container_name: infinity-metrics-devbox
    environment:
      - INFINITY_METRICS_ENV=test
      - INFINITY_METRICS_DOMAIN=localhost
      - INFINITY_METRICS_STORAGE_PATH=/app/storage
      - INFINITY_METRICS_PUBLIC_DIR=/app/web/dist
      - INFINITY_METRICS_LOGS_DIR=/app/logs
      - INFINITY_METRICS_LOG_LEVEL=info
      - INFINITY_METRICS_APP_PORT=8080
      - INFINITY_METRICS_LICENSE_KEY=IM-DEVBOX-TEST-ONLY
      - INFINITY_METRICS_JOB_INTERVAL_SECONDS=3
      - SERVER_INSTANCE_ID=infinity-devbox-$(date +%s)
      - TZ=UTC
    volumes:
      - infinity_storage:/app/storage
      - infinity_logs:/app/logs
    restart: unless-stopped
    networks:
      - infinity-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/_health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  caddy:
    image: caddy:2.7-alpine
    container_name: caddy-devbox
    environment:
      - DOMAIN=localhost
    ports:
      - "8080:8080"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./devbox.html:/usr/share/caddy/devbox.html:ro
      - ./alt.html:/usr/share/caddy/alt.html:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - infinity-network
    depends_on:
      infinity-web:
        condition: service_healthy

volumes:
  infinity_storage:
  infinity_logs:
  caddy_data:
  caddy_config:

networks:
  infinity-network:
    driver: bridge
